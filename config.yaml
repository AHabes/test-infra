presets:
  - labels:
      preset-gc-compute-envs: "true"
    env:
      - name: CLOUDSDK_COMPUTE_ZONE
        value: "europe-west3-b"
      - name: CLOUDSDK_COMPUTE_REGION
        value: "europe-west3"
  - labels:
      preset-gc-project-env: "true"
    env:
      - name: CLOUDSDK_CORE_PROJECT
        value: "sap-kyma-prow"
  - labels:
      preset-sa-vm-kyma-integration: "true" # Service account with "Compute Admin" and "Compute OS Admin Login" roles
    env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/credentials/sa-vm-kyma-integration/service-account.json
    volumes:
      - name: sa-vm-kyma-integration
        secret:
          secretName: sa-vm-kyma-integration
    volumeMounts:
      - name: sa-vm-kyma-integration
        mountPath: /etc/credentials/sa-vm-kyma-integration
        readOnly: true
  - labels:
      preset-sa-gke-kyma-integration: "true"
    env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/credentials/sa-gke-kyma-integration/service-account.json
      - name: CLOUDSDK_DNS_ZONE_NAME
        value: "build-kyma" #GCloud DNS Zone Name (NOT it's DNS name!)
      - name: KYMA_PROJECT_DIR
        value: "/home/prow/go/src/github.com/kyma-project"
    volumes:
      - name: sa-gke-kyma-integration
        secret:
          secretName: sa-gke-kyma-integration
    volumeMounts:
      - name: sa-gke-kyma-integration
        mountPath: /etc/credentials/sa-gke-kyma-integration
        readOnly: true
  - labels:
      preset-sa-gcr-push: "true" # Service account with "Storage Admin" role
    env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/credentials/sa-gcr-push-kyma-project/service-account.json
    volumes:
      - name: sa-gcr-push-kyma-project
        secret:
          secretName: sa-gcr-push-kyma-project
    volumeMounts:
      - name: sa-gcr-push-kyma-project
        mountPath: /etc/credentials/sa-gcr-push-kyma-project
        readOnly: true
  - labels:
      preset-sa-kyma-artifacts: "true"
    env:
    - name: GOOGLE_APPLICATION_CREDENTIALS
      value: /etc/credentials/sa-kyma-artifacts/service-account.json
    volumes:
    - name: sa-kyma-artifacts
      secret:
        secretName: sa-kyma-artifacts
    volumeMounts:
    - name: sa-kyma-artifacts
      mountPath: /etc/credentials/sa-kyma-artifacts
  - labels:
      preset-dind-enabled: "true"
    env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
    volumes:
      - name: docker-graph
        emptyDir: {}
    volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
  - labels:
      preset-docker-push-repository: "true"
    env:
      - name: DOCKER_PUSH_REPOSITORY
        value: "eu.gcr.io/kyma-project"
  - labels:
      preset-docker-push-repository-gke-integration: "true" # Needed for kyma installer image
    env:
      - name: DOCKER_PUSH_REPOSITORY
        value: "eu.gcr.io/sap-kyma-prow"
  - labels:
      preset-docker-push-repository-test-infra: "true"
    env:
      - name: DOCKER_PUSH_REPOSITORY
        value: "eu.gcr.io/kyma-project/test-infra"
  - labels:
      preset-docker-push-repository-incubator: "true"
    env:
      - name: DOCKER_PUSH_REPOSITORY
        value: "eu.gcr.io/kyma-project/incubator"
  - labels:
      preset-build-pr: "true"
    env:
      - name: BUILD_TYPE
        value: pr
      - name: DOCKER_PUSH_DIRECTORY
        value: "/pr"
  - labels:
      preset-build-master: "true"
    env:
      - name: BUILD_TYPE
        value: master
      - name: DOCKER_PUSH_DIRECTORY
        value: "/develop"
  - labels:
      preset-build-console-master: "true"
    env:
      - name: BUILD_TYPE
        value: master
  - labels:
      preset-build-release: "true"
    env:
      - name: BUILD_TYPE
        value: release
  - labels:
      preset-bot-npm-token: "true"
    env:
      - name: BOT_NPM_TOKEN
        valueFrom:
          secretKeyRef:
            name: kyma-bot-npm-token
            key: token
  - labels:
      preset-bot-github-token: "true"
    env:
      - name: BOT_GITHUB_TOKEN
        valueFrom:
          secretKeyRef:
            name: kyma-bot-github-token
            key: token
  - labels:
      preset-bot-github-identity: "true"
    env:
      - name: BOT_GITHUB_EMAIL
        value: "kyma.bot@sap.com"
      - name: BOT_GITHUB_USER
        value: "Kyma Bot"
  - labels:
      preset-bot-github-ssh: "true"
    env:
      - name: BOT_GITHUB_SSH_PATH
        value: /etc/credentials/kyma-bot-github-ssh/key.pem
    volumes:
      - name: kyma-bot-github-ssh
        secret:
          secretName: kyma-bot-github-ssh
    volumeMounts:
      - name: kyma-bot-github-ssh
        mountPath: /etc/credentials/kyma-bot-github-ssh
        readOnly: true
  - labels:
      preset-kyma-artifacts-bucket: "true"
    env:
      - name: KYMA_ARTIFACTS_BUCKET
        value: gs://kyma-prow-artifacts
  - labels:
      preset-slack-notifications: "true"
    env:
      - name: SLACK_CLIENT_WEBHOOK_URL
        value: https://sap-cx.slack.com/services/hooks/jenkins-ci
      - name: SLACK_CLIENT_CHANNEL_ID
        value: "#prow-nightly-notify"
      - name: SLACK_CLIENT_TOKEN
        valueFrom:
          secretKeyRef:
            name: slack-nightly-token
            key: token
  - labels:
      preset-nightly-github-integration: "true"
    env:
      - name: GITHUB_INTEGRATION_APP_CLIENT_ID
        valueFrom:
          secretKeyRef:
            name: nightly-github-integration-app-client-id
            key: client-id
      - name: GITHUB_INTEGRATION_APP_CLIENT_SECRET
        valueFrom:
          secretKeyRef:
            name: nightly-github-integration-app-client-secret
            key: client-secret
  - labels:
      preset-weekly-github-integration: "true"
    env:
      - name: GITHUB_INTEGRATION_APP_CLIENT_ID
        valueFrom:
          secretKeyRef:
            name: weekly-github-integration-app-client-id
            key: client-id
      - name: GITHUB_INTEGRATION_APP_CLIENT_SECRET
        valueFrom:
          secretKeyRef:
            name: weekly-github-integration-app-client-secret
            key: client-secret

plank:
  job_url_template: 'https://35.234.112.122/view/gcs/prow-suakbas/{{if eq .Spec.Type "presubmit"}}pr-logs/pull{{else if eq .Spec.Type "batch"}}pr-logs/pull{{else}}logs{{end}}{{if .Spec.Refs}}{{if ne .Spec.Refs.Org ""}}/{{.Spec.Refs.Org}}_{{.Spec.Refs.Repo}}{{end}}{{end}}{{if eq .Spec.Type "presubmit"}}/{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}{{else if eq .Spec.Type "batch"}}/batch{{end}}/{{.Spec.Job}}/{{.Status.BuildID}}/'
  job_url_prefix: 'https://35.234.112.122/view/gcs/'
  allow_cancellations: true # AllowCancellations enables aborting presubmit jobs for commits that have been superseded by newer commits in Github pull requests.
  max_concurrency: 30 # Limit of concurrent ProwJobs. Need to be adjusted depending of the cluster size.
  pod_pending_timeout: 60m
  default_decoration_config:
    timeout: 7200000000000 # 2h
    grace_period: 15000000000 # 15s
    utility_images:
      clonerefs: "gcr.io/k8s-prow/clonerefs:v20190206-b01b288"
      initupload: "gcr.io/k8s-prow/initupload:v20190206-b01b288"
      entrypoint: "gcr.io/k8s-prow/entrypoint:v20190206-b01b288"
      sidecar: "gcr.io/k8s-prow/sidecar:v20190206-b01b288"
    gcs_configuration:
      bucket: prow-suakbas
      path_strategy: "explicit"
    gcs_credentials_secret: "sa-gcs-plank" # Service account with "Object Admin" role

deck:
  spyglass:
    size_limit: 500000000 # 500MB
    viewers:
      "started.json|finished.json":
      - "metadata"
      "build-log.txt":
      - "buildlog"
      "artifacts/junit.*\\.xml":
      - "junit"
  branding:
    header_color: "#0b74de" # Kyma color
    logo: "prow/branding/logo.svg"
    favicon: "prow/branding/favicon.png"
    

push_gateway:
  endpoint: pushgateway
  interval: 10s
